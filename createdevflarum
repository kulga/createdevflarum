#!/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin
cd "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source_location="source_devflarum/"
forum_location=forum/
database_name=''
database_username=''
database_password=''

composer_file=files/"$database_name"_composer.json
config_file=files/"$database_name"_config.php
update_pid=files/"$database_name"_update.pid

if [ ! -d files ]; then mkdir files; fi

while getopts "c:d:fiu" opt; do
  case "$opt" in
    c)
      source_location="$OPTARG"
      ;;
    d)
      forum_location="$OPTARG"
      ;;
    f)
       # Full Restore without updating
      rsync -a --delete --exclude='.git' --exclude='commits.txt' --exclude='dev-master.tar.gz' "$source_location" "$forum_location"

      # Drop all tables
      mysqldump -u"$database_username" -p"$database_password" --add-drop-table --no-data "$database_name" | grep ^DROP | mysql -u"$database_username" -p"$database_password" "$database_name"

      if [ -e full_"$database_username".sql ]; then /usr/bin/mysql -u"$database_username" -p"$database_password" "$database_name" < full_"$database_username".sql; fi
      exit 0
      ;;
    i)
      # Full replacement
      # Drop all tables
      mysqldump -u"$database_username" -p"$database_password" --add-drop-table --no-data "$database_name" | grep ^DROP | mysql -u"$database_username" -p"$database_password" "$database_name"
      rm "$forum_location"config.php

      read -p "Hit Enter to Save Current State "
      mysqldump -u"$database_username" -p"$database_password" "$database_name" > full_"$database_username".sql
      exit 0
      ;;
    u)
      # Full update without restore

      if [ "$composer_file" -nt "$source_location"composer.json ]
        then
          echo "Updating "$source_location"/composer.json"
          diff "$composer_file" "$source_location"composer.json
          cp -p "$composer_file" "$source_location"composer.json
      fi


      /usr/local/bin/composer --working-dir="$source_location" update --no-interaction
      rsync -a --delete --exclude='.git' --exclude='commits.txt' --exclude='dev-master.tar.gz' "$source_location" "$forum_location"
      composer show --working-dir="$source_location" | grep flarum >> commits.txt
      exit 0
      ;;
  esac
done

# Create base set of files and update
if [ ! -d "$source_location" ]
  then
    (
      yes | /usr/local/bin/composer create-project flarum/flarum "$source_location" --stability=dev
      if [ ! -d "$source_location"/assets/fonts ]; then cp -r "$source_location/vendor/components/font-awesome/fonts" "$source_location"/assets; fi
      cd "$source_location"
      if [ ! -f ../"$composer_file" ];
        then
          echo Downloading "$composer_file"
          curl -s 'https://raw.githubusercontent.com/kulga/createdevflarum/master/docs/composer_default.json' > ../"$composer_file"
        else
          cp ../"$composer_file" composer.json
      fi
      /usr/local/bin/composer update --prefer-source
    )
fi


(
  # Download composer file if doesnt exist
  if [ ! -e "$composer_file" ]; then echo Downloading "$composer_file"; curl -s 'https://raw.githubusercontent.com/kulga/createdevflarum/master/docs/composer_default.json' > "$composer_file"; fi
  # Copy composer file to source files
  cd "$source_location"
  cp ../"$composer_file" composer.json

  /usr/local/bin/composer update --no-interaction

  # Restore config file
  cp ../"$database_username"_config.php config.php

)
rsync -a --delete --exclude='.git' "$source_location" "$forum_location"

if [ -e full_"$database_username".sql ]; then /usr/bin/mysql -u"$database_username" -p"$database_password" "$database_name" < full_"$database_username".sql; fi
( cd "$forum_location"; echo -e 'Will\n' > commits.txt; composer show | grep flarum >> commits.txt)

tar --exclude='config.php' -zcf dev-master.tar.gz "$forum_location"
mv dev-master.tar.gz "$forum_location"
